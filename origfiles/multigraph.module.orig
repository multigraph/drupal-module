<?php
// $Id$

/**
 * @file
 * This module provides a node type called Multigraph
 */

/**
 * Implements hook_node_info() to provide our multigraph type.
 */
function multigraph_node_info() {
  return array(
    'multigraph' => array(
      'name' => t('Multigraph'),
      'base' => 'multigraph',
      'description' => t('Use this content type to create a graph.'),
      'has_title' => TRUE,
      'title_label' => t('Graph Title'),
      'help' => t('Enter the graph title, description, and mugl.'),
    ),
  );
}

/**
 * Implement hook_form() with the standard default form.
 */
function multigraph_form($node, $form_state) {
  return node_content_form($node, $form_state);
}


/**
 * Implementation of hook_menu_alter().
 */
function multigraph_menu_alter(&$callbacks) {
  // If the user does not have 'administer nodes' permission,
  // disable the multigraph menu item by setting its access callback to FALSE.
  if (!user_access('administer nodes')) {
    $callbacks['node/add/multigraph']['access callback'] = FALSE;
    // Must unset access arguments or Drupal will use user_access()
    // as a default access callback.
    unset($callbacks['node/add/multigraph']['access arguments']);
  }
}

/**
 * Implementation of hook_permission().
 */
function multigraph_permission() { 
  return array(
  'create multigraph' => array(
    'title' => t('Create a multigraph'),
    'description' => t('Create a multigraph'),
  ),
  'edit own multigraph' => array(
    'title' => t('Edit own multigraph'),
    'description' => t('Edit your own multigraphing'),
  ),
  'edit any multigraph' => array(
    'title' => t('Edit any multigraph'),
    'description' => t('Edit any multigraphing'),
  ),
  'delete own multigraph' => array(
    'title' => t('Delete own multigraph'),
    'description' => t('Delete own multigraphing'),
  ),
  'delete any multigraph' => array(
    'title' => t('Delete any multigraph'),
    'description' => t('Delete any multigraphing'),
  ),
 );
}


/**
 * Implementation of hook_validate().
 */
function multigraph_validate($node) {
  // Enforce a minimum character count of 2 on company names.
//  if (isset($node->multigraph_company) && strlen($node->multigraph_company['und'][0]['value']) < 2) {
//    form_set_error('multigraph_company', t('The company name line of your multigraph is too short. You need at least 2 characters.'), $limit_validation_errors = NULL);
//  }
}


/**
 * Implementation of hook_insert().
 */
function multigraph_insert($node) {
// log details of the multigraphing to watchdog  
//  watchdog('multigraph', 'A new multigraph titled: '.$node->title.' for company: '.$node->multigraph_company['und'][0]['value'].' was added by UID: '.$node->uid, $variables = array(), WATCHDOG_NOTICE, $link = 'node/'.$node->nid);  
}


/**
 * Implementation of hook_update().
 */
 function multigraph_update($node) { 
// log details of the multigraphing to watchdog  
//  watchdog('multigraph', 'A multigraph titled: '.$node->title.' for company: '.$node->multigraph_company['und'][0]['value'].' was updated by UID: '.$node->uid, $variables = array(), WATCHDOG_NOTICE, $link = 'node/'.$node->nid);
 }
 
/**
 * Implementation of hook_delete().
 */
 function multigraph_delete($node) { 
// log details of the multigraphing to watchdog  
//  watchdog('multigraph', 'A multigraph titled: '.$node->title.' for company: '.$node->multigraph_company['und'][0]['value'].' was deleted by UID: '.$node->uid, $variables = array(), WATCHDOG_NOTICE, $link = 'node/'.$node->nid);
 } 
 
 
/**
 * Implementation of hook_load().
 */
function multigraph_load($nodes) { 
// Add a new element to the node at load time for storing the multigraphing sponsor information
//  foreach ($nodes as $node) {
//     $node->sponsor = "ACME Career Services, Your Source for Drupal Jobs";
//  }  
//  return $node;
} 
 
/**
 * Implement hook_view().
 */
 function multigraph_view($node, $view_mode) { 
   if ($view_mode == 'full') {
     unset($node->multigraph_mugl);
     $node->content['graph'] = array(
         '#markup' => theme('graph', array('graph' => 'graph goes here')),
         '#weight' => 100,
       );
   }

 // Add and theme the sponsor so it appears when the multigraph is displayed
   //  if ($view_mode == 'full') {
   //        $node->content['sponsor'] = array(
   //        '#markup' => theme('sponsor', array('sponsor' => $node->sponsor, 'sponsor_id' => $node->nid)),
   //        '#weight' => 100,
   //      );
   //  }
   dsm($node);
  return $node; 
 } 
 

 
/**
 * Implementation of hook_theme().
 */
function multigraph_theme() {
// define the variables and template associated with the sponsor field
  return array(
    'graph' => array(
      'variables' => array('graph' => NULL),
      'template' => 'graph',
    ),
//    'sponsor' => array(
//      'variables' => array('sponsor' => NULL, 'sponsor_id' => NULL),
//      'template' => 'sponsor',
//    ),
  );
}
 
 
